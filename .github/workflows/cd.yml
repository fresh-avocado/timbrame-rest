name: Deploy Timbrame to Production

on:
    push:
        branches: [main]

jobs:
    deploy:
        name: Upload Image to ECR and Deploy it to EKS
        runs-on: ubuntu-latest

        steps:
            - name: Pull code from repo into GH Actions server
              uses: actions/checkout@v2

            - name: Install kubectl
              uses: azure/setup-kubectl@v1
              with:
                  version: 'v1.28.4'
              id: install

            - name: Set AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: sa-east-1

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Build, tag, and push image to Amazon ECR
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  ECR_REPOSITORY: timbrame-rest
                  IMAGE_TAG: ${{ github.sha }}
              run: |
                  docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
                  docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

            - name: Point kubectl to EKS cluster
              run: aws eks update-kubeconfig --name timbrame --region sa-east-1

            - name: Deploy image to Amazon EKS
              run: |
                  kubectl apply -f eks/deployment.yml
                  kubectl apply -f eks/service.yml
                  kubectl apply -f eks/issuer.yml
                  kubectl apply -f eks/ingress.yml
